name: Lead Manager Api CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  #AZURE_WEBAPP_NAME: leadmanager-api
  #AZURE_WEBAPP_PACKAGE_PATH: "./src/hosts/LeadManagerApi/publish"
  DOTNET_VERSION: "9.x"
  SOLUTION_PATH: "LeadManager.sln"
  API_PROJECT_PATH: "src/hosts/LeadManagerApi"
  PUBLISH_DIR: "./publish"
  #APPLICATION_LAYER_UNIT_TESTS_PROJECT_PATH: "tests/unit-tests/Application.Tests"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --verbosity minimal --logger:"html;LogFileName=resultado-testes.html" --collect:"XPlat Code Coverage"

      - name: Install Report Generation tool
        if: success()
        run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.4.5

      - name: Generate code coverage report
        if: success()
        run: |
          cd ${{ env.SOLUTION_PATH }}/TestResults
          # Cd into generated directory with code coverage generated XML output
          cd $(ls -d */|head -n 1)
          reportgenerator "-reports:coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:Html

  #publish:
  #  name: Publish
  #  runs-on: ubuntu-latest

  #  steps:
  #    - uses: actions/checkout@v4

  #    - name: Setup .NET
  #      uses: actions/setup-dotnet@v4
  #      with:
  #        dotnet-version: ${{ env.DOTNET_VERSION }}

  #    - name: Restore
  #      run: dotnet restore ${{ env.SOLUTION_PATH }}

  #    - name: Build
  #      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

  #    - name: Test
  #      run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-restore --no-build --verbosity normal

  #    - name: Publish
  #      run: dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --no-restore --no-build --property:PublishDir=${{ env.PUBLISH_DIR }}

#      - name: Publish Artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: webapp
#          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

#  deploy:
#    name: Deploy to Azure
#    runs-on: ubuntu-latest
#    needs: [build-and-test]

#    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v4
#        with:
#          name: webapp
#          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

#      - name: Deploy
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: ${{ env.AZURE_WEBAPP_NAME }}
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#          package: "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
